"""fixes user_id to nullable flase and remove ip adress column

Revision ID: 509d62586ab6
Revises: 5fa53d20eb8a
Create Date: 2025-06-27 07:50:38.216273

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '509d62586ab6'
down_revision = '5fa53d20eb8a'
branch_labels = None
depends_on = None


def upgrade():
    from sqlalchemy.sql import text
    conn = op.get_bind()

    # 1. Remove likes with NULL user_id (invalid entries)
    conn.execute(text("DELETE FROM likes WHERE user_id IS NULL"))

    # 2. Drop ip_address column
    with op.batch_alter_table('likes') as batch_op:
        batch_op.drop_column('ip_address')

    # 3. Add NOT NULL constraint to user_id
    with op.batch_alter_table('likes') as batch_op:
        batch_op.alter_column('user_id', nullable=False)

    # 4. Add unique constraint
    op.create_unique_constraint('unique_user_trip_like', 'likes', ['trip_id', 'user_id'])


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('likes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ip_address', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.drop_constraint('unique_user_trip_like', type_='unique')
        batch_op.create_unique_constraint('unique_like_by_ip', ['trip_id', 'ip_address'])
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    # ### end Alembic commands ###
